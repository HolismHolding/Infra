#!/bin/bash

. /HolismHolding/Infra/Scripts/Message.sh
. /HolismHolding/Infra/Scripts/SetupNginxAndLocalDns.sh
. /HolismHolding/Infra/Scripts/GetRandomPort.sh
. /HolismHolding/Infra/Scripts/CreateCertificate.sh

function GetOrganizationStorageHost()
{
    IFS='.' read -r -a array <<< $(cat Host)
    hostIndex=$(( ${#array[@]} - 2 ))
    hostArray=(${array[@]:$hostIndex:2})
    export Host=storage.${hostArray[0]}.${hostArray[1]}
}

function CreateContainer()
{
    Info 'Creating storage container'
    ComposeFile=/Temp/$Organization/Storage/DockerCompose.yml
    mkdir -p $(dirname $ComposeFile)
    envsubst < /HolismHolding/Infra/Storage/Dev/DockerCompose.yml > $ComposeFile
    docker-compose -p "${Organization}Storage" -f $ComposeFile up -d --remove-orphans
}

function SetupNginxAndLocalDnsForStorage() {
    sudo chmod 777 /etc/hosts
    sudo chmod -R 777 /etc/nginx/conf.d

    Info "Setting up NGINX and local DNS for $Host ...";
    if ! grep -q " $Host" /etc/hosts; then
        echo "127.0.0.1 $Host" >> /etc/hosts;
    fi
    if [ -f "/etc/nginx/conf.d/$Host.conf" ]; then
        rm -rf "/etc/nginx/conf.d/$Host.conf";
    fi
    export NginxParamsServerName='$server_name'
    export NginParamsRequestUri='$request_uri'
    envsubst < /HolismHolding/Infra/Storage/Dev/Nginx > /etc/nginx/conf.d/$Host.conf
    sed -i 's/https:\/\/;/https:\/\/$server_name$request_uri;/g' /etc/nginx/conf.d/$Host.conf
    #systemctl reload nginx
    sudo nginx -s reload
}

function CreateStorageContainer()
{
    GetOrganizationStorageHost

    OriginalRepository=$Repository
    Repository=Storage
    OriginalRandomPort=$RandomPort
    GetRandomPort
    export StoragePort=$RandomPort

    CreateCertificate
    SetupNginxAndLocalDnsForStorage

    Repository=$OriginalRepository
    RandomPort=$OriginalRandomPort
    
    Divide
    CreateContainer
    Divide
}